name: "Continuous Integration"

on:
    push:
        branches-ignore:
            - 'dependabot/**'
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    behat:
        runs-on: ubuntu-20.04

        name: "Behat - Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["5.4.*"]
                sylius: ["~1.11.2"]
                node: ["14.x"]
                mysql: ["8.0"]

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: composer:v2,flex,symfony
                    coverage: none

            -
                name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version: "${{ matrix.node }}"
                    cache: "yarn"
                    cache-dependency-path: |
                        **/package.json
                        **/yarn.lock

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Output PHP version for Symfony CLI
                run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

            -
                name: Install certificates
                run: symfony server:ca:install

            -
                name: Run Chrome Headless
                run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' http://127.0.0.1 > /dev/null 2>&1 &

            -
                name: Run webserver
                run: (cd tests/Application && symfony server:start --port=8080 --dir=public --daemon)

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer update --no-interaction
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony }}

            -
                name: Install JS dependencies
                run: (cd tests/Application && yarn install)

            -
                name: Build application assets
                run: (cd tests/Application && yarn build)

            -
                name: Prepare test application cache
                run: (cd tests/Application && bin/console cache:warmup -vvv)

            -
                name: Install bundle assets
                run: (cd tests/Application && bin/console assets:install public -vvv)

            -
                name: Prepare test application database
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:schema:create -vvv)

            -
                name: Validate database schema
                run: (cd tests/Application && bin/console doctrine:schema:validate)

            -
                name: Load fixtures in test application
                run: (cd tests/Application && bin/console sylius:fixtures:load -n)

            -
                name: Run Behat
                run: vendor/bin/behat --colors --strict -vvv --no-interaction || vendor/bin/behat --colors --strict -vvv --no-interaction --rerun

            -
                name: Upload Behat logs
                uses: actions/upload-artifact@v3
                if: failure()
                with:
                    name: Behat logs
                    path: etc/build/
                    if-no-files-found: ignore

    composer:
        runs-on: ubuntu-20.04

        name: "Validate Composer Schema"

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "8.1"
                    extensions: intl
                    tools: composer:v2
                    coverage: none

            -
                name: Validate composer.json
                run: composer validate --ansi --strict

    phpspec:
        runs-on: ubuntu-20.04

        name: "PHPSpec - Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["5.4.*"]
                sylius: ["~1.11.2"]

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: composer:v2,flex
                    coverage: none

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer update --no-interaction
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony }}

            -
                name: Run PHPSpec
                run: vendor/bin/phpspec run --ansi -f progress --no-interaction

    phpunit:
        runs-on: ubuntu-20.04

        name: "PHPUnit - Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["5.4.*"]
                sylius: ["~1.11.2"]

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: composer:v2,flex
                    coverage: none

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer update --no-interaction
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony }}

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always
